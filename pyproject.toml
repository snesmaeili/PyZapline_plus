[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pyzaplineplus"
version = "1.0.0"
description = "Advanced Python library for automatic and adaptive removal of line noise from EEG data using Zapline-plus algorithm"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Sina Esmaeili", email = "sina.esmaeili@umontreal.ca"}
]
keywords = ["eeg", "signal-processing", "neuroscience", "line-noise", "zapline", "dss", "neuroimaging"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
    "matplotlib>=3.3.0",
]

[project.optional-dependencies]
mne = ["mne>=1.0.0"]
dev = [
    "pytest>=6.0",
    "pytest-cov>=3.0",
    "black>=22.0",
    "ruff>=0.1.0",
    "mkdocs>=1.4.0",
    "mkdocs-material>=8.0.0",
    "mkdocstrings[python]>=0.20.0",
    "twine>=4.0.0",
    "build>=0.8.0",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=3.0",
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
    "matplotlib>=3.3.0",
]

[project.urls]
Homepage = "https://github.com/SinaEsmaeili/PyZaplinePlus"
Documentation = "https://sinaesmaeili.github.io/PyZaplinePlus/"
Repository = "https://github.com/SinaEsmaeili/PyZaplinePlus"
"Bug Tracker" = "https://github.com/SinaEsmaeili/PyZaplinePlus/issues"
Changelog = "https://github.com/SinaEsmaeili/PyZaplinePlus/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["pyzaplineplus*"]
exclude = ["tests*", "docs*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers --disable-warnings --cov=pyzaplineplus --cov-report=term-missing"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "E402",  # allow module import not at top (needed for examples)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "I001",  # allow unsorted imports (CI formats)
    "W293",  # blank line contains whitespace (CI formats)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.coverage.run]
source = ["pyzaplineplus"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
